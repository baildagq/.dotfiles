# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
  export ZSH="/home/qiqiang/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"
#ZSH_THEME="ys"
# ZSH_THEME="cloud"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
	zsh-autosuggestions
	zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


#self: !!!!!!!



#进入终端后自动进入tmux
#if [ $TERM != "tmux-256color" ] && [  $TERM != "screen" ]; then
#    tmux attach || tmux new; exit
#fi


# 避免oh-my-zsh 出现文件夹不安全的提示
set ZSH_DISABLE_COMPFIX = true

alias py='python3'
alias xdg="xdg-open"

function megssh {
    # $1: control internal-web or external-web
    # $2: control ws1 or ws2
    # $3: control connect straight or functional:
            # s: straight
            # f: functional: support jupyter and tensorboard
    if [ $# = 3 ];then
        if [ $1 = 'i' ];then
            web="-interal"
        fi
        if [ $1 = 'e' ];then
            web=""
        fi
        if [ $2 = 'ws' ]; then
            if [ $3 = 's' ]; then
                ssh -CAXY stout.qiqiang.brw@wh-a$web.brainpp.cn -D 7071
            fi
            if [ $3 = 'f' ]; then
                ssh -L 8888:localhost:6006 stout.qiqiang.brw@wh-a$web.brainpp.cn
            fi
        fi
        if [ $2 = 'ws2' ]; then
            if [ $3 = 's' ]; then
                ssh -CAXY qiqiang.qiqiang.ws2@wh-a$web.brainpp.cn -D 7071
            fi
            if [ $3 = 'f' ]; then
                ssh -L 8888:localhost:6006 qiqiang.qiqiang.ws2@wh-a$web.brainpp.cn
            fi
        fi
    else
        echo "wrong parameters num"
    fi
}


function megscp {
    # $1: control up or down
    # $2: control internal-web or external-web
    # $3: control ws1 or ws2
    # $4: filepath
    # $5: filepath
    if [ $# = 5 ];then
        if [ $2 = 'i' ];then
            web="-interal"
        fi
        if [ $2 = 'e' ];then
            web=""
        fi
        if [ $3 = 'ws' ]; then
            if [ $1 = 'up' ]; then
	            scp -r $4 stout.qiqiang.brw@wh-a$web.brainpp.cn:$5
            fi
            if [ $1 = 'down' ]; then
	            scp -r stout.qiqiang.brw@wh-a$web.brainpp.cn:$4 $5
            fi
        fi
        if [ $3 = 'ws2' ]; then
            if [ $1 = 'up' ]; then
	            scp -r $4 qiqiang.qiqiang.ws2@wh-a$web.brainpp.cn:$5
            fi
            if [ $1 = 'down' ]; then
	            scp -r qiqiang.qiqiang.ws2@wh-a$web.brainpp.cn:$4 $5
            fi
        fi
    else
        echo "wrong parameters num"
    fi
}

function myssh {
    ssh stout@192.168.163.$1
}

# 通过ctrl-z 由vim 进入shell, 并通过ctrl-z 退回shell
function fancy-ctrl-z {
  if [[ $#BUFFER -eq 0 ]]; then
      BUFFER="fg"
      zle accept-line
  else
	  zle push-input
	  zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

#PATH=/bin:/usr/bin:/usr/local/bin:${PATH}
#export PATH



# 一句niubi 的话
fortune

