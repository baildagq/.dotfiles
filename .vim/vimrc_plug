let mapleader =";"

call plug#begin('~/.vim/plugged')

" extra function
Plug 'junegunn/limelight.vim'
Plug 'junegunn/goyo.vim' " Distraction-free writing in Vim
Plug 'tomtom/tcomment_vim'
Plug 'junegunn/vim-easy-align'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'itchyny/lightline.vim'
Plug 'majutsushi/tagbar'
Plug 'Chiel92/vim-autoformat'
Plug 'prettier/vim-prettier'
Plug 'ervandew/supertab'
Plug 'jiangmiao/auto-pairs'

" file support
Plug 'plasticboy/vim-markdown'

" git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" color
Plug 'drewtempelmeyer/palenight.vim'
Plug 'morhetz/gruvbox'
Plug 'NLKNguyen/papercolor-theme'

" syntax
Plug 'ycm-core/YouCompleteMe'

call plug#end()


" lightline
let g:lightline = {
            \ 'active': {
            \   'left': [ [ 'mode', 'paste' ], [ 'readonly', 'absolutepath', 'modified' ] ],
            \ }
            \ }


"tagbar
let g:tagbar_ctags_bin='/usr/bin/ctags'
" autocmd bufreadpost *.cpp,*.c,*.h,*.hpp,*.cc,*.cxx call tagbar#autoopen()

"============ YouCompleteMe =============
let g:ycm_server_python_interpreter='/usr/bin/python3'
let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'
nnoremap <leader>jd :YcmCompleter GoTo<CR>
vnoremap <silent> <C-T> :<C-u>Ydv<CR>
nnoremap <silent> <C-T> :<C-u>Ydc<CR>
noremap  <leader>yd :<C-u>Yde<CR>


" vim-autoformat
let g:autoformat_autoindent = 0
let g:autoformat_retab = 0
let g:autoformat_remove_trailing_spaces = 0

"palenight
"let g:lightline.colorscheme = 'palenight'
if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198>
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif

" clang_complete
let g:clang_library_path='/usr/lib/llvm-8/lib'


" nerdtree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" vim-prettier
" max line length that prettier will wrap on
" Prettier default: 80
let g:prettier#config#print_width = 150

" vim-easy-align
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" Goyo
let g:goyo_width = 120
let g:goyo_height = 90
