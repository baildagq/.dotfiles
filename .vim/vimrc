"source ~/.vim/.vimrc_bundle
if filereadable(expand("~/.vim/vimrc_plug"))
    source ~/.vim/vimrc_plug
endif

"============= General =============
"the most import map
"let mapleader = "\<Space>"
let mapleader =";"

" " easy resize
" noremap <up> :res +5<CR>
" noremap <down> :res -5<CR>
" noremap <left> :vertical res -5<CR>
" noremap <right> :vertical res +5<CR>

nnoremap Y y$
nnoremap C c$
nnoremap D d$

" clipboard : autoselect 和后面的为默认，本来以为可以直接set
" clipbaord+=unnamedplus,但是发现可能就被exclude吃掉了，所以只能将unnameplus写在了前面，然后加上了default"
set clipboard=unnamedplus,autoselect,exclude:cons\\\|linux

set mouse=a
syntax enable
set number                  "show line numbers
set relativenumber          "show relative line numbers
colorscheme gruvbox
set background=dark

set showcmd                 "show command in bottom bar
set novisualbell            "no screen flashing
set autoread                "reload the file changed outside vim
set autowrite               "auto save file
set history=1000            "Store lots of :cmdline history
set cursorline              "highlight current line
set cursorcolumn            "highlight current column
set showmatch               "highlight matching {[()]}
set pumheight=10            " 设置补全高度为10"
set laststatus=2
set nowrap
" set listchars=tab:>-,trail:-,eol:$ list




"============= Encoding ================
set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8


"============= Indentation =============
set autoindent
set smartindent
set cindent
set tabstop=4               "number  of visual spaces per tab
set softtabstop=4           "number of spaces in tab when editing
set shiftwidth=4            "click one 'delete' delete four space
set smarttab                " 将Tab自动转化成空格[需要输入真正的Tab键时，使用 Ctrl+V + Tab]
set expandtab


"==============  Backup ==============
set nobackup                "no backup files
set noswapfile              "no swap files
set nowritebackup           "only in case you don't want a backup file while editing
set noundofile


"==============  Search ==============
set incsearch               "matching when you are inputing
set hlsearch                "highlight the match when search
set ignorecase              "ignore case when searching
set smartcase               " ...unless we type a capital

"============== folds ===========
set foldenable          "enable fold feature
set foldlevel=5
set foldmethod=indent   "fold based on syntax, other could be indent manual diff


"============= jump =============
set tags=./tags;,tags

"=========================== file-title ==============================
autocmd BufNewFile *.cpp,*.py,*.h exec ":call SetTitle()"
func! SetTitle()
    " call setline(1,"#!/bin/bash")
    call setline(1,"#####################################")
    call append(line(".")+0, "# Author: stout                     #")
    call append(line(".")+1, "# mail: 2817253603@qq.com           #")
    call append(line(".")+2, "# Created Time: ".strftime("%Y-%m-%d %H:%M:%S")." #")
    call append(line(".")+3, "#####################################")
    call append(line(".")+4, "")
    call append(line(".")+5, "")
    7j
endfunc



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Quickly Run
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <F2>: NERDTree<cr>
nnoremap <F4>: TagbarToggle<cr>
nnoremap <F5>: call CompileRunGcc()<CR>
nnoremap <F6>: Autoformat<cr>
nnoremap <F7>: call Shuati()<CR>
nnoremap <F8>: call DebugCompileRunGcc()<CR>
map <C-n> :NERDTreeToggle<CR>
